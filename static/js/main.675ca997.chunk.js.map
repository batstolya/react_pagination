{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","countPageItem","Math","ceil","pageItem","Array","fill","map","_","i","className","classNames","disabled","href","onClick","page","active","length","items","from","to","numbers","n","push","getNumbers","App","useState","option","setOption","setCurrentPage","itemsSpliced","splice","indexLast","itemStart","parseInt","replace","itemEnd","id","onChange","event","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yNASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAElCM,EAAW,IAAIC,MAAMJ,GAAeK,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAMpE,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBb,IAFd,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,GAAqB,OACpCe,QAAS,WACPd,EAAaD,EAAc,EACvBA,EAAc,EACdA,IARR,oBAcDK,EAASG,KAAI,SAACQ,GAAD,OACZ,oBACEL,UAAWC,IAAW,YAAa,CACjCK,OAAQjB,IAAgBgB,IAF5B,SAKE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,WAlCjBd,EAmCsBe,IALhB,SAQGA,SAIP,oBACEL,UAAWC,IAAW,YAAa,CACjCC,SAAUb,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBK,EAASa,QAAU,OAClDH,QAAS,WACPd,EACED,EAAcE,EACVF,EAAc,EACdA,IATV,wBC7DR,IAAMmB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAAIjB,KAAI,SAACe,GAAD,qBAAeA,MAEtCG,EAAgB,WAC3B,MAA4BC,mBAAiB,GAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB8B,EAApB,KAQMC,EAAe,YAAIZ,GAAOa,QAAQhC,EAAc,GAAK4B,EAAQA,GAE7DK,EAAYF,EAAaA,EAAab,OAAS,GAC/CgB,EAAYC,SAASJ,EAAa,GAAGK,QAAQ,SAAU,IAAK,IAC5DC,EAAUF,SAASF,EAAUG,QAAQ,SAAU,IAAK,IAE1D,OACE,sBAAKzB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCkC,EADjC,cACgDG,EADhD,aAIA,sBAAK1B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,SA1BiB,SAACC,GAC1BX,GAAWW,EAAMC,OAAOC,OACxBZ,EAAe,IAyBPY,MAAOd,EALT,UAOE,wBAAQc,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEb,MAAO,GACPC,QAAS6B,EACT5B,YAAaA,EACbC,aAAc6B,IAEhB,6BACGC,EAAavB,KAAI,SAACoC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAAoBA,aE3D9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.675ca997.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const countPageItem = Math.ceil(total / perPage);\n\n  const pageItem = new Array(countPageItem).fill(1).map((_, i) => i + 1);\n\n  const handlerPage = (pageNum:number) => {\n    onPageChange(pageNum);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 && 'true'}\n          onClick={() => {\n            onPageChange(currentPage > 1\n              ? currentPage - 1\n              : currentPage);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pageItem.map((page) => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === page,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              handlerPage(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === countPageItem,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageItem.length && 'true'}\n          onClick={() => {\n            onPageChange(\n              currentPage < countPageItem\n                ? currentPage + 1\n                : currentPage,\n            );\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [option, setOption] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  // eslint-disable-next-line max-len\n  const itemsSpliced = [...items].splice((currentPage - 1) * option, option);\n\n  const indexLast = itemsSpliced[itemsSpliced.length - 1];\n  const itemStart = parseInt(itemsSpliced[0].replace(/[^\\d]/g, ''), 10);\n  const itemEnd = parseInt(indexLast.replace(/[^\\d]/g, ''), 10);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemStart} - ${itemEnd} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelectChange}\n            value={option}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={42}\n        perPage={option}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {itemsSpliced.map((item) => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}